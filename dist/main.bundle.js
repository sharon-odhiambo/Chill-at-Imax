"use strict";(self.webpackChunkchill_at_imax=self.webpackChunkchill_at_imax||[]).push([[179],{426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([n.id,"* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  background-color: black;\r\n}\r\n\r\nnav {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  background-color: red;\r\n  height: 60px;\r\n  border: 2px solid black;\r\n}\r\n\r\nnav ul {\r\n  border: 3px solid white;\r\n  display: flex;\r\n  text-decoration: none;\r\n  list-style: none;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 15px;\r\n  font-size: 20px;\r\n}\r\n\r\nnav ul li a {\r\n  text-decoration: none;\r\n  color: black;\r\n}\r\n\r\n.movielist {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  gap: 10px 20px;\r\n  width: 95vw;\r\n  margin: auto;\r\n}\r\n\r\n.movie-items {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.movie-items img {\r\n  width: 100%;\r\n  height: 50vh;\r\n}\r\n\r\n.movie-items p {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: white;\r\n}\r\n\r\n.btn {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\n.comments-button,\r\n.reserve {\r\n  padding: 8px;\r\n}\r\n\r\n.popup {\r\n  position: fixed;\r\n  overflow-y: scroll;\r\n  width: 60vw;\r\n  height: 60vh;\r\n  background-color: aqua;\r\n  top: 20%;\r\n  left: 25%;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;EACf,qBAAqB;EACrB,YAAY;EACZ,uBAAuB;AACzB;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,qBAAqB;EACrB,gBAAgB;EAChB,yBAAyB;EACzB,mBAAmB;EACnB,SAAS;EACT,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,cAAc;EACd,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,YAAY;AACd;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,SAAS;AACX;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,QAAQ;EACR,SAAS;AACX",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  background-color: black;\r\n}\r\n\r\nnav {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  background-color: red;\r\n  height: 60px;\r\n  border: 2px solid black;\r\n}\r\n\r\nnav ul {\r\n  border: 3px solid white;\r\n  display: flex;\r\n  text-decoration: none;\r\n  list-style: none;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 15px;\r\n  font-size: 20px;\r\n}\r\n\r\nnav ul li a {\r\n  text-decoration: none;\r\n  color: black;\r\n}\r\n\r\n.movielist {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  gap: 10px 20px;\r\n  width: 95vw;\r\n  margin: auto;\r\n}\r\n\r\n.movie-items {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.movie-items img {\r\n  width: 100%;\r\n  height: 50vh;\r\n}\r\n\r\n.movie-items p {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: white;\r\n}\r\n\r\n.btn {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\n.comments-button,\r\n.reserve {\r\n  padding: 8px;\r\n}\r\n\r\n.popup {\r\n  position: fixed;\r\n  overflow-y: scroll;\r\n  width: 60vw;\r\n  height: 60vh;\r\n  background-color: aqua;\r\n  top: 20%;\r\n  left: 25%;\r\n}\r\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],s=0;s<n.length;s++){var c=n[s],d=r.base?c[0]+r.base:c[0],l=o[d]||0,p="".concat(d," ").concat(l);o[d]=l+1;var u=t(p),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(A);else{var m=a(A,r);r.byIndex=s,e.splice(s,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=t(o[i]);e[s].references--}for(var c=r(n,a),d=0;d<o.length;d++){var l=t(o[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},57:(n,e,t)=>{var r=t(379),a=t.n(r),o=t(795),i=t.n(o),s=t(569),c=t.n(s),d=t(565),l=t.n(d),p=t(216),u=t.n(p),A=t(589),m=t.n(A),f=t(426),h={};h.styleTagTransform=m(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=u(),a()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;const v="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/mSLrzI04H4x2wsHv1BBd/likes";window.addEventListener("DOMContentLoaded",(async()=>{const n=await(async()=>{const n=await fetch("https://api.tvmaze.com/shows");try{return await n.json()}catch(n){return n}})(),e=document.querySelector(".movielist");for(let t=27;t<58;t+=1)e.innerHTML+=`\n    <div id='${n[t].id}' class="movie-items">\n        <img src=${n[t].image.original} alt=${n[t].name}>\n        <p>${n[t].name}<span><i class="fa fa-heart"></i><i class="likes-display" id="Likes${n[t].id}"></i></span></p>\n        <div class="btn">\n        <button type="button" class="comments-button">Comments</button>\n        <button type="button" class="reserve">Reservations</button>\n        </div>\n    </div>\n        `;document.querySelectorAll(".fa-heart").forEach((n=>{n.addEventListener("click",(n=>{(async n=>{const e=await fetch(v,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:`${n}`})});try{await e.json()}catch(n){return n}})(n.target.parentNode.parentNode.parentNode.id),(n=>{const e=document.getElementById(`${n}`);let t=+e.childNodes[3].childNodes[1].childNodes[1].innerHTML;t+=1,e.childNodes[3].childNodes[1].childNodes[1].innerHTML=t})(+n.target.parentNode.parentNode.parentNode.id)}))})),(async()=>{const n=await(async()=>{const n=await fetch(v);try{return await n.json()}catch(n){return n}})();document.querySelectorAll(".likes-display").forEach((e=>{let{id:t}=e;const r=document.getElementById(`${t}`);t=t.replace(/Likes/,"");const a=n.find((n=>+n.item_id==+t));void 0===a.likes&&(r.innerHTML=""),r.innerHTML=a.likes}))})();document.querySelectorAll(".comments-button").forEach((n=>{n.addEventListener("click",(n=>{(async n=>{const e=await fetch(`https://api.tvmaze.com/shows/${n}`),t=await e.json(),r=document.querySelector("body"),a=document.createElement("div");a.classList.add("popup"),a.innerHTML=`\n      <button type="button" class="close-btn">x</button>\n      <img src="${t.image.medium}" alt="${t.name}">\n      <h2>${t.name}</h2>\n      <p><span>${t.genres}</span></p>\n      <p><span>${t.premiered}</span><span>${t.rating.average}</span></p>\n      <h3>Comments</h3>\n      <ul></ul>\n      <h4>Add a new comment</h4>\n      <form action="#" id=${n}>\n      <input type="text" placeholder="Your Name" required>\n      <textarea type="text" placeholder="Your Comment" required></textarea>\n      <button type="submit">Comment</button>\n      </form>\n      `,r.append(a),document.querySelector(".close-btn").addEventListener("click",(()=>{r.removeChild(r.lastElementChild)})),(async()=>{const e=document.querySelector(".popup ul"),t=await(async n=>{const e=await fetch(`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/mSLrzI04H4x2wsHv1BBd/comments?item_id=${n}`);try{return await e.json()}catch(n){return n}})(n);t.forEach((n=>{e.innerHTML+=`<li>${n.creation_date}: ${n.username}${n.comment}</li>`}))})();const o=document.querySelector("form");o.addEventListener("submit",(n=>{n.preventDefault();const e=document.querySelector("form input").value.trim(),t=document.querySelector("form textarea").value.trim();document.querySelector(".popup ul").innerHTML+=`<li>${e} ${t}</li>`;const{id:r}=o;(async(n,e,t)=>{const r=await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/mSLrzI04H4x2wsHv1BBd/comments",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:n,username:e,comment:t})});try{await r.json()}catch(n){return n}})(r,e,t),o.clear()}))})(+n.target.parentNode.parentNode.id)}))})),document.querySelectorAll(".reserve").forEach((n=>{n.addEventListener("click",(n=>{(async n=>{const e=await fetch(`https://api.tvmaze.com/shows/${n}`),t=await e.json(),r=document.querySelector("body"),a=document.createElement("div");a.classList.add("popup"),a.innerHTML=`\n        <button type="button" class="close-btn">x</button>\n        <img src="${t.image.medium}" alt="${t.name}">\n        <h2>${t.name}</h2>\n        <p><span>${t.genres}</span></p>\n        <p><span>${t.premiered}</span><span>${t.rating.average}</span></p>\n        <h3>Reservations</h3>\n        <ul></ul>\n        <h4>Add a new reservation</h4>\n        <form action="#" id=${n}>\n        <input type="text" class="name" placeholder="Your Name" required>\n        <input onfocus="(this.type='date')" onblur="(this.type='text')" class="start" placeholder="Start Date" required>\n        <input onfocus="(this.type='date')" onblur="(this.type='text')" class="end" placeholder="End Date" required>\n        <button type="submit">Reserve</button>\n        </form>\n        `,r.append(a),document.querySelector(".close-btn").addEventListener("click",(()=>{r.removeChild(r.lastElementChild)})),(async()=>{const e=document.querySelector(".popup ul"),t=await(async n=>{const e=await fetch(`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/mSLrzI04H4x2wsHv1BBd/reservations?item_id=${n}`);try{return await e.json()}catch(n){return n}})(n);t.forEach((n=>{e.innerHTML+=`<li>${n.date_start} - ${n.date_end} by ${n.username}</li>`}))})();const o=document.querySelector("form");o.addEventListener("submit",(n=>{n.preventDefault();const e=document.querySelector(".name").value.trim(),t=document.querySelector(".start").value.trim(),r=document.querySelector(".end").value.trim();document.querySelector(".popup ul").innerHTML+=`<li>${t} - ${r} by ${e}</li>`;const{id:a}=o;(async(n,e,t,r)=>{const a=await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/mSLrzI04H4x2wsHv1BBd/reservations",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:n,username:e,date_start:t,date_end:r})});try{await a.json()}catch(n){return n}})(a,e,t,r),o.clear()}))})(+n.target.parentNode.parentNode.id)}))}))}))}},n=>{n(n.s=57)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,