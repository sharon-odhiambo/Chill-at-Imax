"use strict";(self.webpackChunkchill_at_imax=self.webpackChunkchill_at_imax||[]).push([[179],{426:(n,r,e)=>{e.d(r,{Z:()=>l});var t=e(537),o=e.n(t),a=e(645),i=e.n(a),A=e(667),s=e.n(A),c=new URL(e(304),e.b),d=i()(o()),p=s()(c);d.push([n.id,"* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  background-color: black;\r\n}\r\n\r\nnav {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  background-color: darkred;\r\n  height: 60px;\r\n  padding: 0 20px;\r\n}\r\n\r\nnav ul {\r\n  display: flex;\r\n  text-decoration: none;\r\n  list-style: none;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 15px;\r\n  font-size: 20px;\r\n}\r\n\r\nnav div a,\r\nnav ul li a {\r\n  text-decoration: none;\r\n  color: black;\r\n}\r\n\r\nfooter {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 5px;\r\n  height: 50px;\r\n  background-color: darkred;\r\n}\r\n\r\n.footer div {\r\n  background-image: url("+p+");\r\n  background-size: 100%;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.movielist {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 100%;\r\n  margin: auto;\r\n}\r\n\r\n.movie-items {\r\n  width: 80vw;\r\n  height: 100%;\r\n  margin: auto;\r\n}\r\n\r\n.movie-items img {\r\n  width: 100%;\r\n  height: 50vh;\r\n}\r\n\r\n.movie-items p {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: white;\r\n}\r\n\r\n.btn {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\n.comments-button,\r\n.reserve {\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  border-radius: 8px 2px;\r\n  background-color: darkred;\r\n}\r\n\r\n.popup {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  position: fixed;\r\n  overflow-y: scroll;\r\n  width: 90vw;\r\n  height: 90vh;\r\n  background-color: darkred;\r\n  border: goldenrod;\r\n  left: 0;\r\n  right: 0;\r\n  top: 10px;\r\n  margin: auto;\r\n}\r\n\r\n.popup img {\r\n  width: 80vw;\r\n  margin: auto;\r\n  margin-top: 5%;\r\n  left: 20px;\r\n}\r\n\r\n.popup h3 {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10%;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\nform input {\r\n  padding: 10px;\r\n  border: 3px solid goldenrod;\r\n}\r\n\r\nform textarea {\r\n  padding: 5px;\r\n  border: 3px solid goldenrod;\r\n}\r\n\r\nform button {\r\n  padding: 10px;\r\n  border: 3px solid goldenrod;\r\n  box-shadow: 3px 3px black;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.popup p,\r\n.popup ul {\r\n  color: darkturquoise;\r\n  font-size: 16px;\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n\r\n.close-btn {\r\n  cursor: pointer;\r\n  width: 100%;\r\n  text-align: right;\r\n  font-size: 16px;\r\n  padding: 10px;\r\n  border: none;\r\n  background: none;\r\n  color: #fff;\r\n}\r\n\r\n@media screen and (min-width: 768px) {\r\n  nav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 20px;\r\n    background-color: darkred;\r\n    height: 60px;\r\n    padding: 0 20px;\r\n  }\r\n\r\n  .movielist {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    gap: 10px 20px;\r\n    width: 95vw;\r\n    margin: auto;\r\n  }\r\n\r\n  .movie-items {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .movie-items img {\r\n    width: 100%;\r\n    height: 50vh;\r\n  }\r\n\r\n  .popup {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    position: fixed;\r\n    overflow-y: scroll;\r\n    width: 30vw;\r\n    height: 80vh;\r\n    background-color: darkred;\r\n    border: goldenrod;\r\n    top: 15%;\r\n    left: 10%;\r\n  }\r\n\r\n  .popup img {\r\n    width: 70%;\r\n    height: 50vh;\r\n    margin: auto;\r\n  }\r\n\r\n  .popup div {\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;EACf,gBAAgB;EAChB,yBAAyB;EACzB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,gBAAgB;EAChB,yBAAyB;EACzB,mBAAmB;EACnB,SAAS;EACT,eAAe;AACjB;;AAEA;;EAEE,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,YAAY;EACZ,yBAAyB;AAC3B;;AAEA;EACE,yDAA0C;EAC1C,qBAAqB;EACrB,4BAA4B;AAC9B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,YAAY;AACd;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,SAAS;AACX;;AAEA;;EAEE,YAAY;EACZ,eAAe;EACf,sBAAsB;EACtB,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,eAAe;EACf,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,yBAAyB;EACzB,iBAAiB;EACjB,OAAO;EACP,QAAQ;EACR,SAAS;EACT,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,cAAc;EACd,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;AACV;;AAEA;EACE,aAAa;EACb,2BAA2B;AAC7B;;AAEA;EACE,YAAY;EACZ,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,2BAA2B;EAC3B,yBAAyB;EACzB,eAAe;EACf,mBAAmB;AACrB;;AAEA;;EAEE,oBAAoB;EACpB,eAAe;EACf,qGAAqG;AACvG;;AAEA;EACE,eAAe;EACf,WAAW;EACX,iBAAiB;EACjB,eAAe;EACf,aAAa;EACb,YAAY;EACZ,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE;IACE,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,eAAe;IACf,yBAAyB;IACzB,YAAY;IACZ,eAAe;EACjB;;EAEA;IACE,aAAa;IACb,sCAAsC;IACtC,cAAc;IACd,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,eAAe;IACf,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,yBAAyB;IACzB,iBAAiB;IACjB,QAAQ;IACR,SAAS;EACX;;EAEA;IACE,UAAU;IACV,YAAY;IACZ,YAAY;EACd;;EAEA;IACE,UAAU;IACV,YAAY;EACd;AACF",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  background-color: black;\r\n}\r\n\r\nnav {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  background-color: darkred;\r\n  height: 60px;\r\n  padding: 0 20px;\r\n}\r\n\r\nnav ul {\r\n  display: flex;\r\n  text-decoration: none;\r\n  list-style: none;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  gap: 15px;\r\n  font-size: 20px;\r\n}\r\n\r\nnav div a,\r\nnav ul li a {\r\n  text-decoration: none;\r\n  color: black;\r\n}\r\n\r\nfooter {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 5px;\r\n  height: 50px;\r\n  background-color: darkred;\r\n}\r\n\r\n.footer div {\r\n  background-image: url('./images/logo.PNG');\r\n  background-size: 100%;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.movielist {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 100%;\r\n  margin: auto;\r\n}\r\n\r\n.movie-items {\r\n  width: 80vw;\r\n  height: 100%;\r\n  margin: auto;\r\n}\r\n\r\n.movie-items img {\r\n  width: 100%;\r\n  height: 50vh;\r\n}\r\n\r\n.movie-items p {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: white;\r\n}\r\n\r\n.btn {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\n.comments-button,\r\n.reserve {\r\n  padding: 8px;\r\n  cursor: pointer;\r\n  border-radius: 8px 2px;\r\n  background-color: darkred;\r\n}\r\n\r\n.popup {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  position: fixed;\r\n  overflow-y: scroll;\r\n  width: 90vw;\r\n  height: 90vh;\r\n  background-color: darkred;\r\n  border: goldenrod;\r\n  left: 0;\r\n  right: 0;\r\n  top: 10px;\r\n  margin: auto;\r\n}\r\n\r\n.popup img {\r\n  width: 80vw;\r\n  margin: auto;\r\n  margin-top: 5%;\r\n  left: 20px;\r\n}\r\n\r\n.popup h3 {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10%;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\nform input {\r\n  padding: 10px;\r\n  border: 3px solid goldenrod;\r\n}\r\n\r\nform textarea {\r\n  padding: 5px;\r\n  border: 3px solid goldenrod;\r\n}\r\n\r\nform button {\r\n  padding: 10px;\r\n  border: 3px solid goldenrod;\r\n  box-shadow: 3px 3px black;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.popup p,\r\n.popup ul {\r\n  color: darkturquoise;\r\n  font-size: 16px;\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n\r\n.close-btn {\r\n  cursor: pointer;\r\n  width: 100%;\r\n  text-align: right;\r\n  font-size: 16px;\r\n  padding: 10px;\r\n  border: none;\r\n  background: none;\r\n  color: #fff;\r\n}\r\n\r\n@media screen and (min-width: 768px) {\r\n  nav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 20px;\r\n    background-color: darkred;\r\n    height: 60px;\r\n    padding: 0 20px;\r\n  }\r\n\r\n  .movielist {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    gap: 10px 20px;\r\n    width: 95vw;\r\n    margin: auto;\r\n  }\r\n\r\n  .movie-items {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .movie-items img {\r\n    width: 100%;\r\n    height: 50vh;\r\n  }\r\n\r\n  .popup {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    position: fixed;\r\n    overflow-y: scroll;\r\n    width: 30vw;\r\n    height: 80vh;\r\n    background-color: darkred;\r\n    border: goldenrod;\r\n    top: 15%;\r\n    left: 10%;\r\n  }\r\n\r\n  .popup img {\r\n    width: 70%;\r\n    height: 50vh;\r\n    margin: auto;\r\n  }\r\n\r\n  .popup div {\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n}\r\n"],sourceRoot:""}]);const l=d},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(i).concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=t.base?s[0]+t.base:s[0],d=a[c]||0,p="".concat(c," ").concat(d);a[c]=d+1;var l=e(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)r[l].references++,r[l].updater(u);else{var m=o(u,t);t.byIndex=A,r.splice(A,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=e(a[i]);r[A].references--}for(var s=t(n,o),c=0;c<a.length;c++){var d=e(a[c]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}a=s}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},57:(n,r,e)=>{var t=e(379),o=e.n(t),a=e(795),i=e.n(a),A=e(569),s=e.n(A),c=e(565),d=e.n(c),p=e(216),l=e.n(p),u=e(589),m=e.n(u),f=e(426),h={};h.styleTagTransform=m(),h.setAttributes=d(),h.insert=s().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=l(),o()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;const E="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/mSLrzI04H4x2wsHv1BBd/likes";window.addEventListener("DOMContentLoaded",(async()=>{const n=await(async()=>{const n=await fetch("https://api.tvmaze.com/shows");try{return await n.json()}catch(n){return n}})(),r=document.querySelector(".movielist");for(let e=158;e<190;e+=1)r.innerHTML+=`\n    <div id='${n[e].id}' class="movie-items">\n        <img src=${n[e].image.original} alt=${n[e].name}>\n        <p>${n[e].name}<span><i class="fa fa-heart"></i><i class="likes-display" id="Likes${n[e].id}"></i></span></p>\n        <div class="btn">\n        <button type="button" class="comments-button">Comments</button>\n        <button type="button" class="reserve">Reservations</button>\n        </div>\n    </div>\n        `;document.querySelectorAll(".fa-heart").forEach((n=>{n.addEventListener("click",(n=>{(async n=>{const r=await fetch(E,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:`${n}`})});try{await r.json()}catch(n){return n}})(n.target.parentNode.parentNode.parentNode.id),(n=>{const r=document.getElementById(`${n}`);let e=+r.childNodes[3].childNodes[1].childNodes[1].innerHTML;e+=1,r.childNodes[3].childNodes[1].childNodes[1].innerHTML=e})(+n.target.parentNode.parentNode.parentNode.id)}))})),(async()=>{const n=await(async()=>{const n=await fetch(E);try{return await n.json()}catch(n){return n}})();document.querySelectorAll(".likes-display").forEach((r=>{let{id:e}=r;const t=document.getElementById(`${e}`);e=e.replace(/Likes/,"");const o=n.find((n=>+n.item_id==+e));void 0===o.likes&&(t.innerHTML=""),t.innerHTML=o.likes}))})();document.querySelectorAll(".comments-button").forEach((n=>{n.addEventListener("click",(n=>{(async n=>{const e=await fetch(`https://api.tvmaze.com/shows/${n}`),t=await e.json(),o=document.querySelector("body"),a=document.createElement("div");a.classList.add("popup"),a.innerHTML=`\n    <button type="button" class="close-btn"><span>X</span></button>\n    <div>\n      <img src="${t.image.medium}" alt="${t.name}">\n      <h2>${t.name}</h2>\n      <p><span>${t.genres}</span></p>\n      <p><span>${t.premiered}</span><span>${t.rating.average}</span></p>\n    </div>\n    <div>\n      <h3><span>Comments</span></h3>\n      <ul></ul>\n      <h4>Add a new comment</h4>\n      <form action="#" id=${n}>\n      <input type="text" placeholder="Your Name" required>\n      <textarea type="text" placeholder="Your Comment" required></textarea>\n      <button type="submit">Comment</button>\n      </form>\n      </div>\n      `,o.append(a),document.querySelector(".close-btn").addEventListener("click",(()=>{o.removeChild(o.lastElementChild),r.style.filter="blur(0)"})),(async()=>{const r=document.querySelector(".popup ul"),e=await(async n=>{const r=await fetch(`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/mSLrzI04H4x2wsHv1BBd/comments?item_id=${n}`);try{return await r.json()}catch(n){return n}})(n);e.forEach((n=>{r.innerHTML+=`<li>${n.creation_date} ${n.username}: ${n.comment}</li>`}))})();const i=document.querySelector("form");i.addEventListener("submit",(n=>{n.preventDefault();const r=document.querySelector("form input").value.trim(),e=document.querySelector("form textarea").value.trim();document.querySelector(".popup ul").innerHTML+=`<li>${r}: ${e}</li>`;const{id:t}=i;(async(n,r,e)=>{const t=await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/mSLrzI04H4x2wsHv1BBd/comments",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:n,username:r,comment:e})});try{await t.json()}catch(n){return n}})(t,r,e),i.reset()}))})(+n.target.parentNode.parentNode.id),r.style.filter="blur(3px)"}))})),document.querySelectorAll(".reserve").forEach((n=>{n.addEventListener("click",(n=>{(async n=>{const e=await fetch(`https://api.tvmaze.com/shows/${n}`),t=await e.json(),o=document.querySelector("body"),a=document.createElement("div");a.classList.add("popup"),a.innerHTML=`\n    <button type="button" class="close-btn"><span>X</span></button>\n    <div>\n        <img src="${t.image.medium}" alt="${t.name}">\n        <h2>${t.name}</h2>\n        <p><span>${t.genres}</span></p>\n        <p><span>${t.premiered}</span><span>${t.rating.average}</span></p>\n      </div>\n      <div>\n        <h3><span>Reservations</span>\n        </h3>\n        <ul></ul>\n        <h4>Add a new reservation</h4>\n        <form action="#" id=${n}>\n        <input type="text" class="name" placeholder="Your Name" required>\n        <input onfocus="(this.type='date')" onblur="(this.type='text')" class="start" placeholder="Start Date" required>\n        <input onfocus="(this.type='date')" onblur="(this.type='text')" class="end" placeholder="End Date" required>\n        <button type="submit">Reserve</button>\n        </form>\n      <div>\n        `,o.append(a),document.querySelector(".close-btn").addEventListener("click",(()=>{o.removeChild(o.lastElementChild),r.style.filter="blur(0)"})),(async()=>{const r=document.querySelector(".popup ul"),e=await(async n=>{const r=await fetch(`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/mSLrzI04H4x2wsHv1BBd/reservations?item_id=${n}`);try{return await r.json()}catch(n){return n}})(n);e.forEach((n=>{r.innerHTML+=`<li>${n.date_start} - ${n.date_end} by ${n.username}</li>`}))})();const i=document.querySelector("form");i.addEventListener("submit",(n=>{n.preventDefault();const r=document.querySelector(".name").value.trim(),e=document.querySelector(".start").value.trim(),t=document.querySelector(".end").value.trim();document.querySelector(".popup ul").innerHTML+=`<li>${e} - ${t} by ${r}</li>`;const{id:o}=i;(async(n,r,e,t)=>{const o=await fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/mSLrzI04H4x2wsHv1BBd/reservations",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:n,username:r,date_start:e,date_end:t})});try{await o.json()}catch(n){return n}})(o,r,e,t),i.reset()}))})(+n.target.parentNode.parentNode.id),r.style.filter="blur(3px)"}))}))}))},304:(n,r,e)=>{n.exports=e.p+"67bb1723011478a2513b.PNG"}},n=>{n(n.s=57)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,